/* КОНСТАНТА - КОНСТАНТА*/
/*-----БИБЛИОТЕКИ-----*/
#include "buttoon.h"
#include "kontur.h"
#include "ConditionChecker.h"
/*-----БИБЛИОТЕКИ-----*/   

bool photo;
uint32_t lastPhTime;

Buttoon buttons[] = {
  Buttoon(A2),
  Buttoon(A3),
  Buttoon(A4),
  Buttoon(A5),
  Buttoon(A6),
  Buttoon(A7),
  Buttoon(A8),
  Buttoon(A9),
  Buttoon(A10),
  Buttoon(3),
  Buttoon(18),
  Buttoon(19),
  Buttoon(20),
  Buttoon(21)
};

kontur konturs[] = {
  kontur(4),
  kontur(5),
  kontur(6),
  kontur(7),
  kontur(8),
  kontur(9)
};
/* КОНСТАНТА - КОНСТАНТА*/

/* вот тут ты уже меняешь количество условий (переменная conDinNum)*/
const uint8_t conDinNum = 0;  //количество условий
ConditionChecker con[conDinNum];
void setup() {
  /* КОНСТАНТА - КОНСТАНТА*/
  for (uint8_t i = 0; i < conDinNum; i++) {
    con[i] = ConditionChecker();
  }
  /* КОНСТАНТА - КОНСТАНТА*/
  Serial.begin(9600);
  pinMode(A0, INPUT);
  pinMode(A1, OUTPUT);
  digitalWrite(A1, 1);
}

void loop() {

  newUpdate();
}

/* КОНСТАНТА - КОНСТАНТА*/
/*----- НАСТРОЙКА ФОТОРЕЗИСТОРА ДЕНЬ/НОЧЬ-----------*/
bool day_night(int16_t photoRes) {
  if (analogRead(A0) > photoRes) {
    photo = 1;
    lastPhTime = millis();
  }
  if (millis() - lastPhTime > 5000 && analogRead(A0) < photoRes) {
    photo = 0;
  }
  return photo;
}
/*----- НАСТРОЙКА ФОТОРЕЗИСТОРА ДЕНЬ/НОЧЬ-----------*/
void newUpdate() {
  konturs[0].loop();
  konturs[1].loop();
  konturs[2].loop();
  konturs[3].loop();
  konturs[4].loop();
  konturs[5].loop();
  konturs[6].loop();
  konturs[7].loop();
  buttons[0].update();
  buttons[1].update();
  buttons[2].update();
  buttons[3].update();
  buttons[4].update();
  buttons[5].update();
  buttons[6].update();
  buttons[7].update();
  buttons[8].update();
  buttons[9].update();
  buttons[10].update();
  buttons[11].update();
  buttons[12].update();
  buttons[13].update();
}
/* КОНСТАНТА - КОНСТАНТА*/